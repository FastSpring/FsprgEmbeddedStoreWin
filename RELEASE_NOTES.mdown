<html>
<head>
<meta http-equiv="Content-type" content="text/html; charset=utf-8">
<title>Release Notes FsprgEmbeddedStoreSDK</title>
<link rel='stylesheet' href='HOW_TO/style.css' type='text/css'/>
</head>
<body>

<img id="logo" src="HOW_TO/fastspring_logo.png"/>

<h1 id='header'>FastSpring Embedded Store SDK<br/>Release Notes</h1>

# Release 1.0.5.0 #

## Providing SubscriptionReference

`Model.OrderItem` provides a subscriptionReference attribute if the order was a subscription. This reference can be used to make calls to FastSpring's [Subscription API](https://support.fastspring.com/entries/236487-api-subscriptions).

	Model.OrderItem
	...
	string SubscriptionReference
	...




# Release 1.0.4.0 #

## Coupon Parameter ##

`StoreParameters` has now a coupon parameter.

	FsprgEmbeddedStore.StoreParameters
	...
	/// <summary>
	/// Pass a coupon code via the URL to automatically apply a coupon to the order so that the customer 
	/// does not need to enter it. A corresponding coupon code must be setup and associated with a promotion.
	/// Example: DECSPECIAL987
	/// </summary>
	string Coupon
	...

## Order total and item total in USD ##

`Model.Order` and `Model.OrderItem` provide now totals in USD.

	FsprgEmbeddedStore.Model.Order
	...
	decimal OrderTotalUSD
	...
	
	FsprgEmbeddedStore.Model.OrderItem
	...
	decimal ItemTotal
	decimal ItemTotalUSD
	...




# Release 1.0.3.0 #

## URL on DidLoadStore and DidLoadPage ##
Enhanced `Controller.DidLoadStore` and added `Controller.DidLoadPage`.

	public class Controller : INotifyPropertyChanged {
        public WebBrowser WebView { get; set; };

        public event DidLoadStoreHandler DidLoadStore;
        public event DidLoadPageEventHandler DidLoadPage;
        public event DidReceiveOrderEventHandler DidReceiveOrder;
        public event PropertyChangedEventHandler PropertyChanged;

        public void LoadWithParameters(StoreParameters parameters);
        public void LoadWithContentsOfFile(string path);

        public bool IsLoading { get; };
        public bool IsSecure { get; };
	}

`DidLoadPage` will be called on every subsequent page load after `DidLoadStore`. It gives the possibility to monitor the URL and resize the window appropriately based on the URL.

</body></html>